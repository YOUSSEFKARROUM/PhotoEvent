#!/bin/bash
set -e

echo "üöÄ === CORRECTION COMPL√àTE PHOTOEVENTS ==="
echo ""

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages color√©s
print_status() {
    echo -e "${BLUE}üì¶ $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -d "backend" ]; then
    print_error "Dossier 'backend' non trouv√©!"
    print_warning "Assurez-vous d'√™tre dans le r√©pertoire racine du projet."
    exit 1
fi

print_status "Installation des d√©pendances Node.js..."
cd backend
npm install bullmq@^5.1.0 ioredis@^5.3.2 node-schedule@^2.1.1
print_success "D√©pendances Node.js install√©es"

print_status "Installation des d√©pendances Python..."
# V√©rifier si Python est install√©
if ! command -v python3 &> /dev/null; then
    print_error "Python 3 n'est pas install√©"
    print_warning "Veuillez installer Python 3.11+ avant de continuer"
    exit 1
fi

# Installer les d√©pendances Python avec les bonnes versions
python3 -m pip install --upgrade pip
python3 -m pip install tensorflow==2.15.0 tf-keras==2.15.0
python3 -m pip install deepface==0.0.79 opencv-python==4.8.0.76 retina-face==0.0.14
print_success "D√©pendances Python install√©es"

print_status "Cr√©ation du fichier .env..."
cat > .env << EOT
# Configuration du serveur
PORT=3001
NODE_ENV=development
FRONTEND_URL=http://localhost:5173

# Base de donn√©es MongoDB
MONGODB_URI=mongodb://localhost:27017/photoevents

# S√©curit√© JWT
JWT_SECRET=photoevents-super-secret-jwt-key-2024-development-only-change-in-production
JWT_EXPIRES_IN=7d

# Redis pour les queues
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# Python et DeepFace
PYTHON_COMMAND=python3
FACE_RECOGNITION_DEBUG=true
FACE_RECOGNITION_THRESHOLD=0.7

# Cloudinary (optionnel)
CLOUDINARY_CLOUD_NAME=
CLOUDINARY_API_KEY=
CLOUDINARY_API_SECRET=

# Logs et monitoring
LOG_LEVEL=info
ENABLE_METRICS=true

# Limites et timeouts
MAX_FILE_SIZE=52428800
UPLOAD_TIMEOUT=300000
FACE_RECOGNITION_TIMEOUT=300000

# Nettoyage automatique
CLEANUP_TEMP_FILES_AGE=24
CLEANUP_ORPHAN_FILES_ENABLED=true
CLEANUP_OLD_PENDING_PHOTOS_ENABLED=true
EOT
print_success "Fichier .env cr√©√©"

print_status "Cr√©ation des r√©pertoires n√©cessaires..."
mkdir -p uploads/photos uploads/temp
print_success "R√©pertoires cr√©√©s"

print_status "V√©rification de l'installation DeepFace..."
if python3 -c "import deepface; print('DeepFace OK')" 2>/dev/null; then
    print_success "DeepFace install√© correctement"
else
    print_warning "DeepFace n'est pas install√© correctement"
    print_warning "Les fonctionnalit√©s de reconnaissance faciale seront limit√©es"
fi

cd ..

print_status "Installation des d√©pendances frontend..."
npm install
print_success "D√©pendances frontend install√©es"

print_status "V√©rification de Redis..."
if command -v redis-server &> /dev/null; then
    print_success "Redis d√©tect√©"
else
    print_warning "Redis n'est pas install√©"
    print_warning "Installez Redis pour utiliser les queues de traitement"
    print_warning "Ubuntu/Debian: sudo apt-get install redis-server"
    print_warning "macOS: brew install redis"
    print_warning "Windows: T√©l√©chargez depuis https://redis.io/download"
fi

print_status "V√©rification de MongoDB..."
if command -v mongod &> /dev/null; then
    print_success "MongoDB d√©tect√©"
else
    print_warning "MongoDB n'est pas install√©"
    print_warning "Installez MongoDB pour la base de donn√©es"
    print_warning "Ubuntu/Debian: sudo apt-get install mongodb"
    print_warning "macOS: brew install mongodb/brew/mongodb-community"
    print_warning "Windows: T√©l√©chargez depuis https://www.mongodb.com/try/download/community"
fi

echo ""
print_success "=== CORRECTION TERMIN√âE ==="
echo ""
echo "üìã Prochaines √©tapes :"
echo ""
echo "1Ô∏è‚É£ D√©marrer Redis :"
echo "   redis-server"
echo ""
echo "2Ô∏è‚É£ D√©marrer MongoDB :"
echo "   mongod"
echo ""
echo "3Ô∏è‚É£ D√©marrer le worker de traitement :"
echo "   cd backend && npm run worker"
echo ""
echo "4Ô∏è‚É£ D√©marrer le serveur backend :"
echo "   cd backend && npm run dev"
echo ""
echo "5Ô∏è‚É£ D√©marrer le frontend :"
echo "   npm run dev"
echo ""
echo "üîë Identifiants par d√©faut :"
echo "   Email: admin@photoevents.com"
echo "   Mot de passe: admin123"
echo ""
echo "üìä URLs :"
echo "   Frontend: http://localhost:5173"
echo "   Backend: http://localhost:3001"
echo "   Health check: http://localhost:3001/api/health"
echo ""
print_success "Toutes les corrections ont √©t√© appliqu√©es !" 